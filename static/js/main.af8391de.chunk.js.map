{"version":3,"sources":["pages/RequestUserName.js","utils/firebase.js","pages/RecoveryAccountWithPhoneNo.js","App.js","reportWebVitals.js","index.js"],"names":["CssTextField","withStyles","root","color","borderBottomColor","borderColor","TextField","Login","props","inputStyles","marginBottom","state","userName","open","errorMessage","loading","_event","reason","this","setState","e","inputName","target","name","value","trim","preventDefault","self","memberUrl","fetch","then","body","text","result","history","push","console","log","error","classes","Fragment","Card","style","background","Box","Container","className","demoWrapImg","Grid","container","item","xs","md","lg","width","m","FormGroup","margin","label","variant","autoFocus","id","required","onChange","event","handleChangeFormData","position","Button","type","backgroundColor","textTransform","fontSize","opacity","onClick","performSearch","CircularProgress","size","buttonProgress","demoWrapText","IconButton","goBack","Typography","align","title","Snackbar","autoHideDuration","onClose","handleClose","elevation","severity","React","Component","theme","spacing","top","left","height","opicity","padding","zIndex","textAlign","borderRadius","maxWidth","marginLeft","withTheme","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseAuth","auth","formInputCommonStyle","RecoveryAccountWithPhoneNo","verificationCode","phoneNo","memberForRecovery","match","params","JSON","parse","applicationVerifier","RecaptchaVerifier","callback","response","phNo","startsWith","ss","split","s","length","signInWithPhoneNumber","confirmResult","window","confirmationResult","catch","confirm","location","href","ref","personCode","ThemeProvider","autoComplete","onSubmit","performRecoveryAccountWithPhoneNo","FormControl","commonInputClass","InputLabel","htmlFor","OutlinedInput","labelWidth","wrapper","buttonSuccess","marginTop","App","document","referrer","path","component","RequestUserName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0YAuEMA,EAAeC,YAAW,CAC5BC,KA5DyB,CACzB,sBAAuB,CACnBC,MAAO,YAEX,8BAA+B,CAC3BC,kBAAmB,YAEvB,2BAA4B,CACxB,aAAc,CACVC,YAAa,WAEjB,mBAAoB,CAChBA,YAAa,WAEjB,yBAA0B,CACtBA,YAAa,eA4CJJ,CAElBK,KAEGC,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,YAAc,CAAEC,aAAc,QACnC,EAAKC,MAAQ,CACTC,SAAU,GACVC,MAAM,EACNC,aAAc,KACdC,SAAS,GAPE,E,wDAWPC,EAAQC,GACD,cAAXA,GAGJC,KAAKC,SAAS,CAAEN,MAAM,M,2CAGLO,GACjB,IAAMC,EAAYD,EAAEE,OAAOC,KAC3BL,KAAKC,SAAL,eAAiBE,EAAYD,EAAEE,OAAOE,MAAMC,W,oCAElCL,GAAI,IAAD,OACbA,EAAEM,iBACF,IAAMC,EAAOT,KACPU,EAAS,qDAAiDV,KAAKP,MAAMC,SAA5D,SACfiB,MAAMD,GACDE,MAAK,SAAUC,GACZ,OAAOA,EAAKC,UACbF,MAAK,SAACG,GACDA,GAAqB,SAAXA,GAAgC,KAAXA,EAC/B,EAAKzB,MAAM0B,QAAQC,KAAnB,2BAA4C,EAAKxB,MAAMC,YAEvDwB,QAAQC,IAAI,wBACZV,EAAKR,SAAS,CAAEN,MAAM,EAAMC,aAAc,uBAAwBC,SAAS,QAEhF,SAACuB,GACAF,QAAQE,MAAM,iBAAkBA,GAChCX,EAAKR,SAAS,CAAEN,MAAM,EAAMC,aAAc,wCAAyCC,SAAS,S,+BAI9F,IAAD,OACGwB,EAAYrB,KAAKV,MAAjB+B,QACR,OAAO,eAAC,IAAMC,SAAP,WACH,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,WAAY,SAA3B,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,UAAWP,EAAQQ,YAA9B,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,cAACT,EAAA,EAAD,CAAKF,MAAO,CAAEY,MAAO,YAEzB,eAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UAEI,cAACT,EAAA,EAAD,CAAKW,EAAG,IACR,cAACC,EAAA,EAAD,CAAWd,MAAOxB,KAAKT,YAAvB,SACI,cAACT,EAAD,CACI8C,UAAWP,EAAQkB,OACnBC,MAAM,YACNC,QAAQ,WACRC,WAAW,EACXrC,KAAK,WACLsC,GAAG,2BACHC,UAAQ,EACRC,SAAU,SAACC,GAAD,OAAW,EAAKC,qBAAqBD,QAGvD,sBAAKtB,MAAO,CAAEwB,SAAU,YAAxB,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,SAAST,QAAQ,OAAOjB,MAAO,CAAE2B,gBAAiB,UAAWlE,MAAO,OAAQmE,cAAe,OAAQhB,MAAO,OAAQiB,SAAU,OAAQd,OAAQ,eAAgBe,QAAUtD,KAAKP,MAAMI,QAAU,MAAQ,KAAQ0D,QAAS,SAACrD,GAAD,OAAO,EAAKsD,cAActD,IAA3P,oBAGCF,KAAKP,MAAMI,SAAW,cAAC4D,EAAA,EAAD,CAAkBC,KAAM,GAAI9B,UAAWP,EAAQsC,4BAMtF,eAACjC,EAAA,EAAD,CAAKE,UAAWP,EAAQuC,aAAxB,UACI,cAACC,EAAA,EAAD,CAAYN,QAAS,WAAQ,EAAKjE,MAAM0B,QAAQ8C,UAAhD,SACI,cAAC,IAAD,CAAetC,MAAO,CAAEvC,MAAO,eAEnC,cAACyC,EAAA,EAAD,CAAKW,EAAG,EAAR,SACI,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,KAAKuB,MAAM,SAASpC,UAAWP,EAAQ4C,MAA3D,yCAQhB,cAACC,EAAA,EAAD,CAAUvE,KAAMK,KAAKP,MAAME,KAAMwE,iBAAkB,IAAMC,QAAS,kBAAM,EAAKC,eAA7E,SACI,cAAC,IAAD,CAAUC,UAAW,EAAG7B,QAAQ,SAAS2B,QAAS,kBAAM,EAAKC,eAAeE,SAAS,QAArF,SACKvE,KAAKP,MAAMG,cAAgB,0C,GA9F5B4E,IAAMC,WAqGX1F,eAhJG,SAAC2F,GAAD,MAAY,CAC1B1F,KAAM,CACF,uBAAwB,CACpBuD,OAAQmC,EAAMC,QAAQ,KAG9Bf,aAAc,CACVT,gBAAiB,UACjBlE,MAAO,UACPmE,cAAe,OACfC,SAAU,OACVuB,IAAK,IACLC,KAAM,IACNzC,MAAO,OACP0C,OAAQ,QACRC,QAAS,EACT/B,SAAU,YAEdnB,YAAa,CACTO,MAAO,OACPG,OAAQ,aACRyC,QAAS,OACTC,OAAQ,EACRjC,SAAU,WACVkC,UAAW,SACX1F,aAAc,IACdiC,WAAY,UACZ0D,aAAc,KACdC,SAAU,QAEdzB,eAAgB,CACZ1E,MAAO,cACP+D,SAAU,WACV4B,IAAK,OACLC,KAAM,MACNQ,YAAa,OA6GgB,CAAEC,WAAW,GAAnCvG,CAA2CM,G,oDC7J1DkG,IAASC,cAZc,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMZ,IAAMC,EAAeV,IAASW,KCN/BC,EAAuB,CACzB,sBAAuB,CACnBlH,MAAO,YAEX,8BAA+B,CAC3BC,kBAAmB,YAEvB,2BAA4B,CACxB,aAAc,CACVC,YAAa,WAEjB,mBAAoB,CAChBA,YAAa,WAEjB,yBAA0B,CACtBA,YAAa,cAmEnBiH,E,kDAEF,WAAY9G,GAAQ,IAAD,8BACf,cAAMA,IACDC,YAAc,CAAEC,aAAc,QACnC,EAAKC,MAAQ,CACT4G,iBAAkB,GAClBC,QAAS,GACT3G,MAAM,EACNC,aAAc,KACdC,SAAS,EACT0G,kBAAmB,IATR,E,iEAYErG,GACjB,IAAMC,EAAYD,EAAEE,OAAOC,KAC3BL,KAAKC,SAAL,eAAiBE,EAAYD,EAAEE,OAAOE,MAAMC,W,kCAGpCT,EAAQC,GACD,cAAXA,GAGJC,KAAKC,SAAS,CAAEN,MAAM,M,0CAItB,IAAMc,EAAOT,KACPN,EAAWM,KAAKV,MAAMkH,MAAMC,OAAO/G,SACnCgB,EAAS,qDAAiDhB,EAAjD,SACfM,KAAKC,SAAS,CAAEJ,SAAS,IAEzBc,MAAMD,GACDE,MAAK,SAAUC,GACZ,OAAOA,EAAKC,UACbF,MAAK,SAACG,GACL,GAAIA,GAAqB,SAAXA,GAAgC,KAAXA,EAAe,CAE9C,KADAA,EAAS2F,KAAKC,MAAM5F,IACRuF,QACR,OAEJ7F,EAAKR,SAAS,CAAEqG,QAASvF,EAAOuF,QAASzG,SAAS,EAAO0G,kBAAmBxF,IAC5E,IAAM6F,EAAsB,IAAIrB,IAASW,KAAKW,kBAAkB,sBAAuB,CACnFnD,KAAM,YACNoD,SAAU,SAACC,GACP7F,QAAQC,IAAI,UAAW4F,MAG3BC,EAAO,GACX,GAAIvG,EAAKhB,MAAM6G,QAAQW,WAAW,MAE9B,IADA,IAAMC,EAAKzG,EAAKhB,MAAM6G,QAAQa,MAAM,MAC3BC,EAAI,EAAGA,EAAIF,EAAGG,OAAQD,IAC3BJ,GAAQE,EAAGE,GAGnBJ,EAAI,cAAUA,GACdf,IAAeqB,sBAAsBN,EAAMJ,GACtChG,MAAK,SAAC2G,GACHrG,QAAQC,IAAI,UAAWoG,GACvBC,OAAOC,mBAAqBF,KAE/BG,OAAM,SAACtG,GACJF,QAAQC,IAAIC,GACZX,EAAKR,SAAS,CAAEN,MAAM,EAAMC,aAAc,oBAAqBC,SAAS,YAGhFY,EAAKR,SAAS,CAAEN,MAAM,EAAMC,aAAc,4CAA6CC,SAAS,OAErG,SAACuB,GACAF,QAAQE,MAAM,sCAAuCA,GACrDX,EAAKR,SAAS,CAAEN,MAAM,EAAMC,aAAc,wCAAyCC,SAAS,S,wDAItEK,GAC9BA,EAAEM,iBACF,IAAMC,EAAOT,KACbwH,OAAOC,mBAAmBE,QAAQ3H,KAAKP,MAAM4G,kBACxCzF,MAAK,SAAUG,GACZG,QAAQC,IAAI,8CACZqG,OAAOI,SAASC,KAAhB,UAA0BL,OAAOM,IAAjC,mDAA+ErH,EAAKhB,MAAM8G,kBAAkBwB,WAA5G,kCAAgJtH,EAAKhB,MAAM4G,iBAA3J,uBAA0L5F,EAAKhB,MAAM8G,kBAAkBwB,WAAvN,qBAA8OtH,EAAKhB,MAAM8G,kBAAkBlG,SAC5QqH,OAAM,SAAUtG,GACfF,QAAQC,IAAIC,GACZX,EAAKR,SAAS,CAAEN,MAAM,EAAMC,aAAc,8CAA+CC,SAAS,S,+BAIpG,IAAD,SACsBG,KAAKV,MAAxB+B,EADH,EACGA,QAASqD,EADZ,EACYA,MACjB,OAAO,eAACsD,EAAA,EAAD,CAAetD,MAAOA,EAAtB,UACH,cAAChD,EAAA,EAAD,CAAKiB,GAAG,wBACR,eAACpB,EAAA,EAAD,CAAMC,MAAO,CAAEC,WAAY,SAA3B,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,UAAWP,EAAQQ,YAA9B,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,cAACT,EAAA,EAAD,CAAKF,MAAO,CAAEY,MAAO,YAEzB,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,uBAAM8F,aAAa,MAAMC,SAAU,SAAChI,GAAD,OAAO,EAAKiI,kCAAkCjI,IAAjF,UACI,mBAAGsB,MAAO,CAAE0D,UAAW,SAAU7B,SAAU,OAAQpE,MAAO,WAA1D,+BACA,oBAAGuC,MAAO,CAAE0D,UAAW,SAAU7B,SAAU,OAAQpE,MAAO,oBAA1D,uDAA2He,KAAKP,MAAM6G,WACtI,eAAC8B,EAAA,EAAD,CACI3F,QAAQ,WAAWb,UAAWP,EAAQgH,iBAD1C,UAEI,cAACC,EAAA,EAAD,CAAYC,QAAQ,kCAApB,+BACA,cAACC,EAAA,EAAD,CACInI,KAAK,mBACLuC,UAAQ,EACRD,GAAG,kCACHO,KAAK,OACL5C,MAAON,KAAKP,MAAM4G,iBAClBxD,SAAU,SAAC3C,GAAD,OAAO,EAAK6C,qBAAqB7C,IAC3CuI,WAAY,SAGpB,cAACxF,EAAA,EAAD,CAAQC,KAAK,SAAST,QAAQ,OAAOjB,MAAO,CAAE2B,gBAAiB,UAAWlE,MAAO,OAAQmE,cAAe,OAAQhB,MAAO,OAAQiB,SAAU,OAAQd,OAAQ,eAAgBe,QAAUtD,KAAKP,MAAMI,QAAU,MAAQ,KAAhN,oBAGCG,KAAKP,MAAMI,SAAW,cAAC4D,EAAA,EAAD,CAAkBC,KAAM,GAAI9B,UAAWP,EAAQsC,2BAKtF,eAACjC,EAAA,EAAD,CAAKE,UAAWP,EAAQuC,aAAxB,UACI,cAACC,EAAA,EAAD,CAAYN,QAAS,WAAQ,EAAKjE,MAAM0B,QAAQ8C,UAAhD,SACI,cAAC,IAAD,CAAetC,MAAO,CAAEvC,MAAO,eAEnC,cAACyC,EAAA,EAAD,CAAKW,EAAG,EAAR,SACI,cAAC0B,EAAA,EAAD,CAAYtB,QAAQ,KAAKuB,MAAM,SAASpC,UAAWP,EAAQ4C,MAA3D,uCAMZ,cAACC,EAAA,EAAD,CAAUvE,KAAMK,KAAKP,MAAME,KAAMwE,iBAAkB,IAAMC,QAAS,kBAAM,EAAKC,eAA7E,SACI,cAAC,IAAD,CAAUC,UAAW,EAAG7B,QAAQ,SAAS2B,QAAS,kBAAM,EAAKC,eAAeE,SAAS,QAArF,SACKvE,KAAKP,MAAMG,cAAgB,6C,GAxIX4E,IAAMC,WAiJhC1F,eA/MG,SAAC2F,GAAD,MAAY,CAC1B1F,KAAM,CACF,uBAAwB,CACpBuD,OAAQmC,EAAMC,QAAQ,KAG9Bf,aAAc,CACVT,gBAAiB,UACjBlE,MAAO,UACPmE,cAAe,OACfC,SAAU,OACVuB,IAAK,IACLC,KAAM,IACNzC,MAAO,OACP0C,OAAQ,QACRC,QAAS,EACT/B,SAAU,YAEdnB,YAAa,CACTO,MAAO,OACPG,OAAQ,aACRyC,QAAS,OACTC,OAAQ,EACRjC,SAAU,WACVkC,UAAW,SACX1F,aAAc,IACdiC,WAAY,UACZ0D,aAAc,KACdC,SAAU,QAEdiD,iBAAiB,2BACVlC,GADS,IAEZ/D,MAAO,SAEXsG,QAAS,CACLnG,OAAQmC,EAAMC,QAAQ,GACtB3B,SAAU,YAEd2F,cAAe,CACXxF,gBAAiB,aACjB,UAAW,CACPA,gBAAiB,eAGzBQ,eAAgB,CACZ1E,MAAO,cACP+D,SAAU,WACV4B,IAAK,MACLC,KAAM,MACN+D,WAAY,GACZvD,YAAa,IAEjBpB,MAAO,CACH,cAAe,OACf,qBAAsB,EACtB,qBAAsB,WACtB,gBAAiB,WACjB,SAAY,SACZ,QAAW,kBAqJkB,CAAEqB,WAAW,GAAnCvG,CAA2CqH,GCxN3CyC,E,kDAfX,WAAYvJ,GAAQ,IAAD,6BACf,cAAMA,GACNkI,OAAOM,IAAMgB,SAASC,SAAS5B,MAAM,YAAY,GAFlC,E,qDAMf,OAAO,cAAC,IAAD,UACH,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6B,KAAK,6BAA6BC,UAAW7C,IACpD,cAAC,IAAD,CAAO6C,UAAWC,a,GAVhBzE,aCEH0E,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,8BAAqBzI,MAAK,YAAkD,IAA/C0I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJf,SAASgB,eAAe,SAM5BX,M","file":"static/js/main.af8391de.chunk.js","sourcesContent":["/*\r\n * Copyright (c) 2015 - 2020 - Tara Aung Co., Ltd - All Rights Reserved.\r\n * Tara Systems Project - Proprietary and confidential. www.taraaung.com\r\n */\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Container, TextField, FormGroup, Card, Grid, Button, withStyles, IconButton, Typography } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst formInputCommonStyle = {\r\n    \"& label.Mui-focused\": {\r\n        color: \"##1E90FF\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n        borderBottomColor: \"##1E90FF\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n        \"& fieldset\": {\r\n            borderColor: \"#1E90FF\",\r\n        },\r\n        \"&:hover fieldset\": {\r\n            borderColor: \"#1E90FF\",\r\n        },\r\n        \"&.Mui-focused fieldset\": {\r\n            borderColor: \"##1E90FF\",\r\n        },\r\n    },\r\n};\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        \"& .MuiTextField-root\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    demoWrapText: {\r\n        backgroundColor: \"#1E90FF\",\r\n        color: \"#ffffff\",\r\n        textTransform: \"none\",\r\n        fontSize: \"23px\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n        opicity: 1,\r\n        position: \"absolute\",\r\n    },\r\n    demoWrapImg: {\r\n        width: \"100%\",\r\n        margin: \"280px auto\",\r\n        padding: \"10px\",\r\n        zIndex: 2,\r\n        position: \"relative\",\r\n        textAlign: \"center\",\r\n        marginBottom: \"0\",\r\n        background: \"#ffffff\",\r\n        borderRadius: \"5%\",\r\n        maxWidth: \"100%\"\r\n    },\r\n    buttonProgress: {\r\n        color: \" green[500]\",\r\n        position: \"absolute\",\r\n        top: \"50px\",\r\n        left: \"50%\",\r\n        marginLeft: -16,\r\n    }\r\n});\r\n\r\nconst CssTextField = withStyles({\r\n    root: formInputCommonStyle,\r\n})(TextField);\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputStyles = { marginBottom: \"20px\" };\r\n        this.state = {\r\n            userName: \"\",\r\n            open: false,\r\n            errorMessage: null,\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    handleClose(_event, reason) {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleChangeFormData(e) {\r\n        const inputName = e.target.name;\r\n        this.setState({ [inputName]: e.target.value.trim() });\r\n    }\r\n    performSearch(e) {\r\n        e.preventDefault();\r\n        const self = this;\r\n        const memberUrl = `https://tarabartest.firebaseio.com/Members/${this.state.userName}.json`;\r\n        fetch(memberUrl)\r\n            .then(function (body) {\r\n                return body.text();\r\n            }).then((result) => {\r\n                if (result && result !== \"null\" && result !== \"\") {\r\n                    this.props.history.push(`/recoveryAccount/${this.state.userName}`);\r\n                } else {\r\n                    console.log(\"Member is not found!\");\r\n                    self.setState({ open: true, errorMessage: \"Member is not found!\", loading: false });\r\n                }\r\n            }, (error) => {\r\n                console.error(\"performLogin()\", error);\r\n                self.setState({ open: true, errorMessage: \"Sorry, server cannot be communicated.\", loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return <React.Fragment>\r\n            <Card style={{ background: \"white\" }}>\r\n                <Box>\r\n                    <Container className={classes.demoWrapImg}>\r\n                        <Grid container>\r\n                            <Grid item xs={1} md={4} lg={4} >\r\n                                <Box style={{ width: \"100%\" }}></Box>\r\n                            </Grid>\r\n                            <Grid item xs={10} md={4} lg={4} >\r\n                                {/* <form autoComplete=\"off\" onSubmit={(e) => this.performSearch(e)}> */}\r\n                                <Box m={3}></Box>\r\n                                <FormGroup style={this.inputStyles}>\r\n                                    <CssTextField\r\n                                        className={classes.margin}\r\n                                        label=\"User Name\"\r\n                                        variant=\"outlined\"\r\n                                        autoFocus={true}\r\n                                        name=\"userName\"\r\n                                        id=\"user-name-outlined-input\"\r\n                                        required\r\n                                        onChange={(event) => this.handleChangeFormData(event)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <div style={{ position: \"relative\" }}>\r\n                                    <Button type=\"submit\" variant=\"text\" style={{ backgroundColor: \"#1E90FF\", color: \"#fff\", textTransform: \"none\", width: \"100%\", fontSize: \"23px\", margin: \"10mm 0 5mm 0\", opacity: (this.state.loading ? \"0.5\" : \"1\") }} onClick={(e) => this.performSearch(e)}>\r\n                                        Search\r\n                                    </Button>\r\n                                    {this.state.loading && <CircularProgress size={30} className={classes.buttonProgress} />}\r\n                                </div>\r\n                                {/* </form> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                    <Box className={classes.demoWrapText} >\r\n                        <IconButton onClick={() => { this.props.history.goBack(); }}>\r\n                            <ArrowBackIcon style={{ color: \"#ffffff\" }} />\r\n                        </IconButton>\r\n                        <Box m={2}>\r\n                            <Typography variant=\"h4\" align=\"center\" className={classes.title}>\r\n                                Password Recovery\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box >\r\n\r\n            </Card>\r\n            <Snackbar open={this.state.open} autoHideDuration={6000} onClose={() => this.handleClose()}>\r\n                <MuiAlert elevation={6} variant=\"filled\" onClose={() => this.handleClose()} severity=\"error\">\r\n                    {this.state.errorMessage || \"Sorry, something went wrong.\"}\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(Login);\r\n","/*\r\n * Copyright (c) 2015 - 2020 - Tara Aung Co., Ltd - All Rights Reserved.\r\n * Tara Systems Project - Proprietary and confidential. www.taraaung.com\r\n */\r\nimport firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAD43Q9Oz-PbfJIgFkrPwwEQDHyOE5jYJE\",\r\n    authDomain: \"dev1tarabar.firebaseapp.com\",\r\n    databaseURL: \"https://dev1tarabar.firebaseio.com\",\r\n    projectId: \"dev1tarabar\",\r\n    storageBucket: \"dev1tarabar.appspot.com\",\r\n    messagingSenderId: \"834633851989\",\r\n    appId: \"1:834633851989:web:b5ff73320702d39299e0dc\",\r\n    measurementId: \"G-3PQJN89R70\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseAuth = firebase.auth;\r\n","/*\r\n * Copyright (c) 2015 - 2020 - Tara Aung Co., Ltd - All Rights Reserved.\r\n * Tara Systems Project - Proprietary and confidential. www.taraaung.com\r\n */\r\nimport React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Container, Card, Grid, Button, withStyles, IconButton, FormControl, InputLabel, OutlinedInput, Typography } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { firebaseAuth } from \"../utils/firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst formInputCommonStyle = {\r\n    \"& label.Mui-focused\": {\r\n        color: \"##1E90FF\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n        borderBottomColor: \"##1E90FF\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n        \"& fieldset\": {\r\n            borderColor: \"#1E90FF\",\r\n        },\r\n        \"&:hover fieldset\": {\r\n            borderColor: \"#1E90FF\",\r\n        },\r\n        \"&.Mui-focused fieldset\": {\r\n            borderColor: \"##1E90FF\",\r\n        },\r\n    },\r\n};\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        \"& .MuiTextField-root\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    demoWrapText: {\r\n        backgroundColor: \"#1E90FF\",\r\n        color: \"#ffffff\",\r\n        textTransform: \"none\",\r\n        fontSize: \"23px\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n        opicity: 1,\r\n        position: \"absolute\",\r\n    },\r\n    demoWrapImg: {\r\n        width: \"100%\",\r\n        margin: \"280px auto\",\r\n        padding: \"10px\",\r\n        zIndex: 2,\r\n        position: \"relative\",\r\n        textAlign: \"center\",\r\n        marginBottom: \"0\",\r\n        background: \"#ffffff\",\r\n        borderRadius: \"5%\",\r\n        maxWidth: \"100%\"\r\n    },\r\n    commonInputClass: {\r\n        ...formInputCommonStyle,\r\n        width: \"100%\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: \"green[500]\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"green[700]\",\r\n        },\r\n    },\r\n    buttonProgress: {\r\n        color: \" green[500]\",\r\n        position: \"absolute\",\r\n        top: \"70%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    title: {\r\n        \"line-height\": \"55px\",\r\n        \"-webkit-line-clamp\": 4,\r\n        \"-webkit-box-orient\": \"vertical\",\r\n        \"text-overflow\": \"ellipsis\",\r\n        \"overflow\": \"hidden\",\r\n        \"display\": \"-webkit-box\",\r\n    }\r\n});\r\n\r\nclass RecoveryAccountWithPhoneNo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputStyles = { marginBottom: \"20px\" };\r\n        this.state = {\r\n            verificationCode: \"\",\r\n            phoneNo: \"\",\r\n            open: false,\r\n            errorMessage: null,\r\n            loading: false,\r\n            memberForRecovery: {}\r\n        };\r\n    }\r\n    handleChangeFormData(e) {\r\n        const inputName = e.target.name;\r\n        this.setState({ [inputName]: e.target.value.trim() });\r\n    }\r\n\r\n    handleClose(_event, reason) {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const self = this;\r\n        const userName = this.props.match.params.userName;\r\n        const memberUrl = `https://tarabartest.firebaseio.com/Members/${userName}.json`;\r\n        this.setState({ loading: true });\r\n\r\n        fetch(memberUrl)\r\n            .then(function (body) {\r\n                return body.text();\r\n            }).then((result) => {\r\n                if (result && result !== \"null\" && result !== \"\") {\r\n                    result = JSON.parse(result);\r\n                    if (!result.phoneNo) {\r\n                        return;\r\n                    }\r\n                    self.setState({ phoneNo: result.phoneNo, loading: false, memberForRecovery: result });\r\n                    const applicationVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\r\n                        size: \"invisible\",\r\n                        callback: (response) => {\r\n                            console.log(\"success\", response);\r\n                        }\r\n                    });\r\n                    let phNo = \"\";\r\n                    if (self.state.phoneNo.startsWith(\"09\")) {\r\n                        const ss = self.state.phoneNo.split(\"09\");\r\n                        for (let s = 1; s < ss.length; s++) {\r\n                            phNo += ss[s];\r\n                        }\r\n                    }\r\n                    phNo = `+959${phNo}`;\r\n                    firebaseAuth().signInWithPhoneNumber(phNo, applicationVerifier)\r\n                        .then((confirmResult) => {\r\n                            console.log(\"success\", confirmResult);\r\n                            window.confirmationResult = confirmResult;\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                            self.setState({ open: true, errorMessage: \"Invalid phone No.\", loading: false });\r\n                        });\r\n                } else {\r\n                    self.setState({ open: true, errorMessage: \"User does not exist, please register now.\", loading: false });\r\n                }\r\n            }, (error) => {\r\n                console.error(\"performRecoveryAccountWithPhoneNo()\", error);\r\n                self.setState({ open: true, errorMessage: \"Sorry, server cannot be communicated.\", loading: false });\r\n            });\r\n    }\r\n\r\n    performRecoveryAccountWithPhoneNo(e) {\r\n        e.preventDefault();\r\n        const self = this;\r\n        window.confirmationResult.confirm(this.state.verificationCode)\r\n            .then(function (result) {\r\n                console.log(\"Confirmation verification is successfully!\");\r\n                window.location.href = `${window.ref}tarabar/resources/showmenu/memberDetail/${self.state.memberForRecovery.personCode}?password_recovery_key=${self.state.verificationCode}&personCode=${self.state.memberForRecovery.personCode}&userName=${self.state.memberForRecovery.name}`;\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n                self.setState({ open: true, errorMessage: \"Wrong Verifiaction Code. Please, try again.\", loading: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { classes, theme } = this.props;\r\n        return <ThemeProvider theme={theme}>\r\n            <Box id=\"recaptcha-container\"></Box>\r\n            <Card style={{ background: \"white\" }}>\r\n                <Box>\r\n                    <Container className={classes.demoWrapImg}>\r\n                        <Grid container>\r\n                            <Grid item xs={1} md={4} lg={4} >\r\n                                <Box style={{ width: \"100%\" }}></Box>\r\n                            </Grid>\r\n                            <Grid item xs={10} md={4} lg={4} >\r\n                                <form autoComplete=\"off\" onSubmit={(e) => this.performRecoveryAccountWithPhoneNo(e)}>\r\n                                    <p style={{ textAlign: \"center\", fontSize: \"18px\", color: \"#1E90FF\" }}>Verification Code</p>\r\n                                    <p style={{ textAlign: \"center\", fontSize: \"16px\", color: \"rgb(117 167 216)\" }}>Please type the verification code sent to {this.state.phoneNo}</p>\r\n                                    <FormControl\r\n                                        variant=\"outlined\" className={classes.commonInputClass}>\r\n                                        <InputLabel htmlFor=\"outlined-adornment-verification\">Verification Code</InputLabel>\r\n                                        <OutlinedInput\r\n                                            name=\"verificationCode\"\r\n                                            required\r\n                                            id=\"outlined-adornment-verification\"\r\n                                            type=\"text\"\r\n                                            value={this.state.verificationCode}\r\n                                            onChange={(e) => this.handleChangeFormData(e)}\r\n                                            labelWidth={126}\r\n                                        />\r\n                                    </FormControl>\r\n                                    <Button type=\"submit\" variant=\"text\" style={{ backgroundColor: \"#1E90FF\", color: \"#fff\", textTransform: \"none\", width: \"100%\", fontSize: \"23px\", margin: \"10mm 0 5mm 0\", opacity: (this.state.loading ? \"0.5\" : \"1\") }}>\r\n                                        Verify\r\n                                    </Button>\r\n                                    {this.state.loading && <CircularProgress size={30} className={classes.buttonProgress} />}\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                    <Box className={classes.demoWrapText} >\r\n                        <IconButton onClick={() => { this.props.history.goBack(); }}>\r\n                            <ArrowBackIcon style={{ color: \"#ffffff\" }} />\r\n                        </IconButton>\r\n                        <Box m={2}>\r\n                            <Typography variant=\"h4\" align=\"center\" className={classes.title}>\r\n                                Password Recovery\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </Box >\r\n                <Snackbar open={this.state.open} autoHideDuration={6000} onClose={() => this.handleClose()}>\r\n                    <MuiAlert elevation={6} variant=\"filled\" onClose={() => this.handleClose()} severity=\"error\">\r\n                        {this.state.errorMessage || \"Sorry, something went wrong.\"}\r\n                    </MuiAlert>\r\n                </Snackbar>\r\n\r\n            </Card>\r\n        </ThemeProvider >;\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles, { withTheme: true })(RecoveryAccountWithPhoneNo);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport RequestUserName from \"./pages/RequestUserName\";\r\n\r\nimport RecoveryAccountWithPhoneNo from \"./pages/RecoveryAccountWithPhoneNo\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        window.ref = document.referrer.split(\"/tarabar\")[0];\r\n    }\r\n\r\n    render() {\r\n        return <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/recoveryAccount/:userName\" component={RecoveryAccountWithPhoneNo} />\r\n                <Route component={RequestUserName} />\r\n            </Switch>\r\n        </BrowserRouter>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}